import{_ as s,c as a,d as t,o as p}from"./app-J1Rr-56F.js";const e="/docs/images/react/synthetic_event.png",l="/docs/images/react/set_state.png",c="/docs/images/react/transaction.png",o={};function i(u,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="原理" tabindex="-1"><a class="header-anchor" href="#原理"><span>原理</span></a></h1><p><a href="https://www.babeljs.cn" target="_blank" rel="noopener noreferrer">代码编译演示</a></p><h2 id="jsx本质" tabindex="-1"><a class="header-anchor" href="#jsx本质"><span>JSX本质</span></a></h2><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx"><pre><code><span class="line"><span class="token comment">// JSX 基本用法</span></span>
<span class="line"><span class="token keyword">const</span> imgElem <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">some text</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>imgUrl<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// JSX style</span></span>
<span class="line"><span class="token keyword">const</span> styleData <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;30px&#39;</span><span class="token punctuation">,</span>  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span> <span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">const</span> styleElem <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>styleData<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">设置 style</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// JSX 加载组件</span></span>
<span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span> <span class="token attr-name">submitTitle</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>onSubmitTitle<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">List</span></span> <span class="token attr-name">list</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>list<span class="token punctuation">}</span></span><span class="token punctuation">/&gt;</span></span><span class="token plain-text"></span>
<span class="line"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// JSX 事件</span></span>
<span class="line"><span class="token keyword">const</span> eventList <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>clickHandler<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    some text</span>
<span class="line"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// JSX list</span></span>
<span class="line"><span class="token keyword">const</span> listElem <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">key</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>id<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">index </span><span class="token punctuation">{</span>index<span class="token punctuation">}</span><span class="token plain-text">; title </span><span class="token punctuation">{</span>item<span class="token punctuation">.</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 编译后</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> jsx <span class="token keyword">as</span> _jsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react/jsx-runtime&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> jsxs <span class="token keyword">as</span> _jsxs <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react/jsx-runtime&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// JSX 基本用法</span></span>
<span class="line"><span class="token keyword">const</span> imgElem <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsxs</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;div1&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">/*#__PURE__*/</span><span class="token function">_jsx</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&quot;some text&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsx</span><span class="token punctuation">(</span><span class="token string">&quot;img&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">src</span><span class="token operator">:</span> imgUrl</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// JSX style</span></span>
<span class="line"><span class="token keyword">const</span> styleData <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">fontSize</span><span class="token operator">:</span> <span class="token string">&#39;30px&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">color</span><span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> styleElem <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsx</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">style</span><span class="token operator">:</span> styleData<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&quot;\\u8BBE\\u7F6E style&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// JSX 加载组件</span></span>
<span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsxs</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">/*#__PURE__*/</span><span class="token function">_jsx</span><span class="token punctuation">(</span>Input<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">submitTitle</span><span class="token operator">:</span> onSubmitTitle</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsx</span><span class="token punctuation">(</span>List<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">list</span><span class="token operator">:</span> list</span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// JSX 事件</span></span>
<span class="line"><span class="token keyword">const</span> eventList <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsx</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">onClick</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>clickHandler<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&quot;some text&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// JSX list</span></span>
<span class="line"><span class="token keyword">const</span> listElem <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsx</span><span class="token punctuation">(</span><span class="token string">&quot;ul&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>list<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsxs</span><span class="token punctuation">(</span><span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;index &quot;</span><span class="token punctuation">,</span> index<span class="token punctuation">,</span> <span class="token string">&quot;; title &quot;</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>title<span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// // 总结</span></span>
<span class="line"><span class="token comment">// React.createElement(&#39;div&#39;, null, [child1, child2, child3])</span></span>
<span class="line"><span class="token comment">// React.createElement(&#39;div&#39;, {...}, child1, child2, child3)</span></span>
<span class="line"><span class="token comment">// React.createElement(List, null, child1, child2, &#39;文本节点&#39;)</span></span>
<span class="line"><span class="token comment">// // h 函数</span></span>
<span class="line"><span class="token comment">// // 返回 vnode</span></span>
<span class="line"><span class="token comment">// // patch</span></span>
<span class="line"><span class="token comment">// 类似于 h 函数，返回 vnode</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="合成事件-syntheticevent" tabindex="-1"><a class="header-anchor" href="#合成事件-syntheticevent"><span>合成事件：SyntheticEvent</span></a></h2><p>现象</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">event<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 阻止默认行为</span></span>
<span class="line">event<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 阻止冒泡</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;target&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>target<span class="token punctuation">)</span> <span class="token comment">// 指向当前元素，即当前元素触发</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;current target&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span> <span class="token comment">// 指向当前元素，假象！！！</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 注意，event 其实是 React 封装的。可以看 __proto__.constructor 是 SyntheticEvent 组合事件</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;event&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">)</span> <span class="token comment">// 不是原生的 Event ，原生的 MouseEvent</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;event.__proto__.constructor&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span><span class="token class-name">__proto__</span><span class="token punctuation">.</span>constructor<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 原生 event 如下。其 __proto__.constructor 是 MouseEvent</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nativeEvent&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>nativeEvent<span class="token punctuation">)</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nativeEvent target&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>nativeEvent<span class="token punctuation">.</span>target<span class="token punctuation">)</span>  <span class="token comment">// 指向当前元素，即当前元素触发</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;nativeEvent current target&#39;</span><span class="token punctuation">,</span> event<span class="token punctuation">.</span>nativeEvent<span class="token punctuation">.</span>currentTarget<span class="token punctuation">)</span> <span class="token comment">// 指向 document ！！！</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 1. event 是 SyntheticEvent ，模拟出来 DOM 事件所有能力</span></span>
<span class="line"><span class="token comment">// 2. event.nativeEvent 是原生事件对象</span></span>
<span class="line"><span class="token comment">// 3. 所有的事件，都被挂载到 document 上</span></span>
<span class="line"><span class="token comment">// 4. 和 DOM 事件不一样，和 Vue 事件也不一样</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+e+'" alt="合成事件图示"></p><h3 id="为什么要使用合成事件机制" tabindex="-1"><a class="header-anchor" href="#为什么要使用合成事件机制"><span>为什么要使用合成事件机制</span></a></h3><ul><li>更好的兼容性和跨平台</li><li>减少挂载到 document（<strong>18版本之前，18之后在 root 组件上，有利于多个 React 版本并存</strong>），减少内存消耗，避免频繁解绑</li><li>方便事件的统一管理（如事务机制）</li></ul><h2 id="setstate-和-batchupdate" tabindex="-1"><a class="header-anchor" href="#setstate-和-batchupdate"><span>setState 和 batchUpdate</span></a></h2><h3 id="setstate" tabindex="-1"><a class="header-anchor" href="#setstate"><span>setState</span></a></h3><ul><li>有时异步（普通使用），有时同步（setTimeout、DOM 事件）</li><li>有时合并（对象形式），有时不合并（函数形式）</li></ul><p><img src="'+l+`" alt="setState流程图"></p><h3 id="batchupdate-机制" tabindex="-1"><a class="header-anchor" href="#batchupdate-机制"><span>batchUpdate 机制</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">ListDemo</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 正常使用</span></span>
<span class="line">    <span class="token function-variable function">increase</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 开始：处于 batchUpdate</span></span>
<span class="line">        <span class="token comment">// isBatchingUpdates = true</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>        </span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span>
<span class="line">        <span class="token comment">// 结束</span></span>
<span class="line">        <span class="token comment">// isBatchingUpdates = false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// setTimeout 中</span></span>
<span class="line">    <span class="token function-variable function">increase</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 开始：处于 batchUpdate</span></span>
<span class="line">        <span class="token comment">// isBatchingUpdates = true</span></span>
<span class="line">        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 此时 isBatchingUpdates 是 false</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span>            </span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span>        </span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span>
<span class="line">        <span class="token comment">// 结束</span></span>
<span class="line">        <span class="token comment">// isBatchingUpdates = false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setstate-异步还是同步" tabindex="-1"><a class="header-anchor" href="#setstate-异步还是同步"><span>setState 异步还是同步</span></a></h3><ul><li>setState 无所谓异步还是同步</li><li>看是否能命中 batchUpdate 机制</li><li>判断 isBatchingUpdates</li></ul><h3 id="哪些能命中-batchupdate-机制" tabindex="-1"><a class="header-anchor" href="#哪些能命中-batchupdate-机制"><span>哪些能命中 batchUpdate 机制</span></a></h3><ul><li>生命周期（和它调用的函数）</li><li>React 中注册的事件（和它调用的函数）</li><li>React 可以“管理”的入口</li></ul><h3 id="哪些不能命中-batchupdate-机制" tabindex="-1"><a class="header-anchor" href="#哪些不能命中-batchupdate-机制"><span>哪些不能命中 batchUpdate 机制</span></a></h3><ul><li>setTimeout setInterval 等（和它调用的函数）</li><li>自定义的 DOM 事件（和它调用的函数）</li><li>React “管不到” 的入口</li></ul><h3 id="transaction-事务机制" tabindex="-1"><a class="header-anchor" href="#transaction-事务机制"><span>transaction 事务机制</span></a></h3><p><img src="`+c+'" alt="事务机制"></p><h2 id="组件渲染和更新过程" tabindex="-1"><a class="header-anchor" href="#组件渲染和更新过程"><span>组件渲染和更新过程</span></a></h2><h3 id="jsx-本质和-vdom" tabindex="-1"><a class="header-anchor" href="#jsx-本质和-vdom"><span>JSX 本质和 vdom</span></a></h3><ul><li>JSX 即 createElement 函数</li><li>执行生成 vnode</li><li>patch(elem, vnode) 和 patch(vnode, newVnode)</li></ul><h3 id="组件渲染过程" tabindex="-1"><a class="header-anchor" href="#组件渲染过程"><span>组件渲染过程</span></a></h3><ul><li>props state</li><li>render() 生成 vnode</li><li>patch(elem, vnode)</li></ul><h3 id="组件更新过程" tabindex="-1"><a class="header-anchor" href="#组件更新过程"><span>组件更新过程</span></a></h3><ul><li>setState(newState) --&gt; dirtyComponents （可能有子组件）</li><li>render() 生成 newVnode</li><li>patch(elem, vnode)</li></ul><h4 id="patch-更新的两个阶段" tabindex="-1"><a class="header-anchor" href="#patch-更新的两个阶段"><span>patch 更新的两个阶段</span></a></h4><ul><li>reconciliation 阶段 - 执行 diff 算法，纯 JS 计算</li><li>commit 阶段 - 将 diff 结果渲染 DOM</li></ul><h5 id="组件更新可能会存在的性能问题" tabindex="-1"><a class="header-anchor" href="#组件更新可能会存在的性能问题"><span>组件更新可能会存在的性能问题</span></a></h5><ul><li>JS 是单线程，且和 DOM 渲染共用一个线程</li><li>当组件足够复杂，组件更新时计算和渲染都压力大</li><li>同时在有 DOM 操作需求（动画，鼠标拖动等），将卡顿</li></ul><h5 id="解决方案-fiber" tabindex="-1"><a class="header-anchor" href="#解决方案-fiber"><span>解决方案：fiber</span></a></h5><ul><li>将 reconciliation 阶段进行任务拆分（commit 无法拆分）</li><li>DOM 需要渲染时暂停，空闲时恢复</li><li>window.requestIdleCallback（DOM 需要渲染时执行的 API）</li></ul>',37)]))}const k=s(o,[["render",i],["__file","principle.html.vue"]]),d=JSON.parse('{"path":"/zh/react/class/principle.html","title":"原理","lang":"en-US","frontmatter":{},"git":{"updatedTime":1736842498000,"contributors":[{"name":"zhan_zhang","username":"","email":"18311292602@163.com","commits":2}],"changelog":[{"hash":"26163fbcea3186d4c8a86ab99a8eac08e1b70d2f","time":1736842498000,"email":"18311292602@163.com","author":"zhan_zhang","message":"完成react相关文档"},{"hash":"2926de111f141a89d80be441bad72d0a7a18f6ca","time":1736763553000,"email":"18311292602@163.com","author":"zhan_zhang","message":"feat:finish js document"}]},"filePathRelative":"zh/react/class/principle.md"}');export{k as comp,d as data};
