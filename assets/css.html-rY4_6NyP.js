import{_ as n,c as a,d as e,o as l}from"./app-EKSVbuuA.js";const i={};function p(t,s){return l(),a("div",null,s[0]||(s[0]=[e(`<h1 id="css" tabindex="-1"><a class="header-anchor" href="#css"><span>CSS</span></a></h1><h2 id="布局" tabindex="-1"><a class="header-anchor" href="#布局"><span>布局</span></a></h2><h3 id="盒模型宽度计算" tabindex="-1"><a class="header-anchor" href="#盒模型宽度计算"><span>盒模型宽度计算</span></a></h3><p><strong>offsetWidth = (内容宽度 + 内边距 + 边框)，无外边距；</strong></p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">#div1</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> // 使 offsetWidth 为100px；</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>div1的offsetWidth是多少？（122px）</p><h3 id="margin纵向重叠" tabindex="-1"><a class="header-anchor" href="#margin纵向重叠"><span>margin纵向重叠</span></a></h3><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre><code><span class="line"><span class="token comment">&lt;!-- 如下代码， AAA 和 BBB 之间的距离是多少？ --&gt;</span></span>
<span class="line">p {</span>
<span class="line">    font-size: 16px;</span>
<span class="line">    margin-top: 10px;</span>
<span class="line">    margin-bottom: 15px;</span>
<span class="line">    line-height: 1;</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>AAA<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>BBB<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>相邻元素的 margin-top 和 margin-bottom会发生重叠；</p><p>空白内容的 <p></p> 也会重叠；</p><p>答案: 15px；</p><h3 id="margin-负值问题" tabindex="-1"><a class="header-anchor" href="#margin-负值问题"><span>margin 负值问题</span></a></h3><ul><li>margin-top 和 margin-left 负值，元素向上、向左移动；</li><li>margin-right 负值，右侧元素左移，自身不受影响；</li><li>margin-bottom 负值，下方元素上移，自身不受影响；</li></ul><h3 id="bfc理解与应用" tabindex="-1"><a class="header-anchor" href="#bfc理解与应用"><span>BFC理解与应用</span></a></h3><p>Block format context，块级格式化上下文；</p><p>一块独立渲染区域，内部元素的渲染不会影响边界以外的元素；</p><ul><li>形成 BFC 的条件： <ul><li>float 不是 none</li><li>position 是absolute 或者是 fixed</li><li>overflow 不是visible（可以是：hidden,clip,scroll,auto,overlay）</li><li>display 是 flex 或者 inline-block</li></ul></li><li>BFC 常见应用： <ul><li>清除浮动</li></ul></li></ul><h3 id="float-布局" tabindex="-1"><a class="header-anchor" href="#float-布局"><span>float 布局</span></a></h3><p>如何实现圣杯布局和双飞翼布局；</p><p>目的：</p><ul><li>三栏布局，中间一栏最先加载和渲染（内容最重要）</li><li>两侧内容固定，中间内容随着宽度自适应</li><li>一般用于 PC 网页</li></ul><p>圣杯布局和双飞翼布局技术总结：</p><ul><li>使用 float 布局</li><li>两侧使用 margin 负值，以便和中间内容横向重叠</li><li>防止中间内容被两侧覆盖，一个用 padding（圣杯布局） 一个用 margin（双飞翼布局）</li></ul><h3 id="手写-clearfix" tabindex="-1"><a class="header-anchor" href="#手写-clearfix"><span>手写 clearfix</span></a></h3><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.clearfix:after</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="flex-布局" tabindex="-1"><a class="header-anchor" href="#flex-布局"><span>flex 布局</span></a></h3><p>常用语法：</p><ul><li>flex-direction 主轴方向</li><li>justify-content 主轴对齐方式</li><li>align-items 交叉轴对齐方式</li><li>flex-wrap 是否换行</li><li>align-self 子元素在交叉轴的对齐方式</li></ul><p>实现一个三点的骰子</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">&lt;!-- 骰子容器 --&gt;</span>
<span class="line">.box</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.item</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">/* 背景色、大小、边框等 */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.item:nth-child(2)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">align-self</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 第二项居中对齐 */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token selector">.item:nth-child(3)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">align-self</span><span class="token punctuation">:</span> flex-end<span class="token punctuation">;</span> <span class="token comment">/* 第三项尾对齐 */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定位" tabindex="-1"><a class="header-anchor" href="#定位"><span>定位</span></a></h2><h3 id="absolute-和-relative-分别依据什么定位" tabindex="-1"><a class="header-anchor" href="#absolute-和-relative-分别依据什么定位"><span>absolute 和 relative 分别依据什么定位</span></a></h3><ul><li>relative 依据自身定位</li><li>absolute 依据最近一层定位元素定位</li></ul><h3 id="居中对齐有哪些实现方式" tabindex="-1"><a class="header-anchor" href="#居中对齐有哪些实现方式"><span>居中对齐有哪些实现方式</span></a></h3><h4 id="水平居中" tabindex="-1"><a class="header-anchor" href="#水平居中"><span>水平居中</span></a></h4><ul><li>inline 元素： text-align: center;</li><li>block 元素： margin: auto;</li><li>absolute 元素：left: 50%; margin-left 负值</li></ul><h4 id="垂直居中" tabindex="-1"><a class="header-anchor" href="#垂直居中"><span>垂直居中</span></a></h4><ul><li>inline 元素：line-height 的值等于 height 值；</li><li>absolute 元素：top: 50%; margin-top 负值；</li><li>absolute 元素：transform: translate(-50%, -50%)；(CSS3属性，注意浏览器兼容)</li><li>absolute 元素：left, top, bottom, right = 0; + margin: auto；（兼容性好）</li></ul><h2 id="图文样式" tabindex="-1"><a class="header-anchor" href="#图文样式"><span>图文样式</span></a></h2><h3 id="line-height-如何继承" tabindex="-1"><a class="header-anchor" href="#line-height-如何继承"><span>line-height 如何继承</span></a></h3><ul><li>写具体数值，如 30px，则继承该值</li><li>写比例，如 2、1.5，则继承该比例</li><li>写百分比，如 200%，则继承计算出来的值</li></ul><h2 id="响应式" tabindex="-1"><a class="header-anchor" href="#响应式"><span>响应式</span></a></h2><h3 id="rem" tabindex="-1"><a class="header-anchor" href="#rem"><span>rem</span></a></h3><p>rem 是一个长度单位</p><ul><li>px 是绝对长度单位</li><li>em 相对长度单位，相对于父元素，不常用</li><li>rem 相对长度单位，相对于根元素，常用于响应式布局</li></ul><h3 id="响应式布局的常见方案" tabindex="-1"><a class="header-anchor" href="#响应式布局的常见方案"><span>响应式布局的常见方案</span></a></h3><ul><li>media-query ，根据不同的屏幕宽度设置根元素font-size</li><li>rem ，基于根元素的相对单位</li></ul><h3 id="vw、vh" tabindex="-1"><a class="header-anchor" href="#vw、vh"><span>vw、vh</span></a></h3><ul><li>window.screen.height // 屏幕高度</li><li>window.innerHeight // 网页视口高度</li><li>document.body.clientHeight // 内容高度，随网页内容变化</li><li>vh：网页视口高度的 1 / 100；</li><li>vw：网页视口宽度的 1 / 100；</li><li>vmax：取两者最大值；</li><li>vmin：取两者最小值；</li></ul><h2 id="补充" tabindex="-1"><a class="header-anchor" href="#补充"><span>补充</span></a></h2><h3 id="css-样式优先级" tabindex="-1"><a class="header-anchor" href="#css-样式优先级"><span>CSS 样式优先级</span></a></h3><p>!important &gt; 内联样式 &gt; ID 选择器 = 属性选择器 = 伪类选择器 &gt; 标签选择器 = 伪元素选择器 &gt; 通配选择器</p><p>权重的4个等级顺序</p><ul><li>第一等级：代表内联样式，如 style=&quot;&quot; ，权值为 1000</li><li>第二等级：代表id选择器，如 #content ，权值为 100</li><li>第三等级：代表类，伪类和属性选择器，如 .content ，权值为 10</li><li>第四等级：代表标签选择器和伪元素选择器，如 div p ，权值伪 1</li></ul><p><strong>注意</strong>：通用选择器（*），子选择器（&gt;），相邻同胞选择器（+）并不在这个等级中，所以他们的权值为0 权重的优先顺序：行内样式（1000）&gt; ID选择器（100）&gt; 类选择器（10）&gt; 标签选择器（1） &gt; 通用选择器（0）</p><h2 id="css控制html结构显示和隐藏的方法" tabindex="-1"><a class="header-anchor" href="#css控制html结构显示和隐藏的方法"><span>css控制html结构显示和隐藏的方法</span></a></h2><p>1.使用 display 属性</p><p>通过设置 display 属性为 none 可以隐藏元素，设置为其他值（如 block 、 inline）可以显示元素</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.hidden</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.使用 visibility 属性</p><p>visibility属性可以控制元素的可见性，但保留其占据的空间。设置为 hidden 时，元素不可见，但仍然占据布局空间。</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.hidden</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.使用 opacity 属性</p><p>通过设置 opacity 属性为 0 可以使元素完全透明，从而实现隐藏效果，但元素仍然占据空间并可以被点击</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.hidden</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">pointer-events</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token comment">/* 禁止点击 */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.使用 position 属性</p><p>通过设置 position 属性为 absolute 或 fixed 并将元素移除视口，可以实现隐藏效果</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.hidden</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">left</span><span class="token punctuation">:</span> -9999px<span class="token punctuation">;</span> <span class="token comment">/* 将元素移出视口 */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>5.使用 css 伪类</p><p>可以使用伪类（如 :hover 或 :focus ）来控制元素的显示和隐藏</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.hidden</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.button:hover + .hidden</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> <span class="token comment">/* 当按钮被悬停时显示 */</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>6.使用媒体查询</p><p>可以通过css媒体查询屏幕尺寸或设备特性来控制元素的显示和隐藏</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.hidden</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">max-width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">)</span></span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token selector">.hidden</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span> <span class="token comment">/* 在小屏幕上隐藏 */</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>7.使用 css 动画</p><p>可以结合 css 动画实现元素的渐隐和渐显效果</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre><code><span class="line"><span class="token selector">.fade</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span></span>
<span class="line">    <span class="token property">transition</span><span class="token punctuation">:</span> opacity 0.5s ease<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token selector">.fade.hidden</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,77)]))}const o=n(i,[["render",p],["__file","css.html.vue"]]),r=JSON.parse('{"path":"/zh/css/css.html","title":"CSS","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"布局","slug":"布局","link":"#布局","children":[{"level":3,"title":"盒模型宽度计算","slug":"盒模型宽度计算","link":"#盒模型宽度计算","children":[]},{"level":3,"title":"margin纵向重叠","slug":"margin纵向重叠","link":"#margin纵向重叠","children":[]},{"level":3,"title":"margin 负值问题","slug":"margin-负值问题","link":"#margin-负值问题","children":[]},{"level":3,"title":"BFC理解与应用","slug":"bfc理解与应用","link":"#bfc理解与应用","children":[]},{"level":3,"title":"float 布局","slug":"float-布局","link":"#float-布局","children":[]},{"level":3,"title":"手写 clearfix","slug":"手写-clearfix","link":"#手写-clearfix","children":[]},{"level":3,"title":"flex 布局","slug":"flex-布局","link":"#flex-布局","children":[]}]},{"level":2,"title":"定位","slug":"定位","link":"#定位","children":[{"level":3,"title":"absolute 和 relative 分别依据什么定位","slug":"absolute-和-relative-分别依据什么定位","link":"#absolute-和-relative-分别依据什么定位","children":[]},{"level":3,"title":"居中对齐有哪些实现方式","slug":"居中对齐有哪些实现方式","link":"#居中对齐有哪些实现方式","children":[]}]},{"level":2,"title":"图文样式","slug":"图文样式","link":"#图文样式","children":[{"level":3,"title":"line-height 如何继承","slug":"line-height-如何继承","link":"#line-height-如何继承","children":[]}]},{"level":2,"title":"响应式","slug":"响应式","link":"#响应式","children":[{"level":3,"title":"rem","slug":"rem","link":"#rem","children":[]},{"level":3,"title":"响应式布局的常见方案","slug":"响应式布局的常见方案","link":"#响应式布局的常见方案","children":[]},{"level":3,"title":"vw、vh","slug":"vw、vh","link":"#vw、vh","children":[]}]},{"level":2,"title":"补充","slug":"补充","link":"#补充","children":[{"level":3,"title":"CSS 样式优先级","slug":"css-样式优先级","link":"#css-样式优先级","children":[]}]},{"level":2,"title":"css控制html结构显示和隐藏的方法","slug":"css控制html结构显示和隐藏的方法","link":"#css控制html结构显示和隐藏的方法","children":[]}],"git":{"updatedTime":1736862884000,"contributors":[{"name":"zhan_zhang","username":"zhan_zhang","email":"18311292602@163.com","commits":1,"url":"https://github.com/zhan_zhang"}]},"filePathRelative":"zh/css/css.md"}');export{o as comp,r as data};
