import{_ as n,c as a,d as p,o as e}from"./app-DdRqyrxk.js";const t={};function l(c,s){return e(),a("div",null,s[0]||(s[0]=[p(`<h1 id="仿博客项目开发" tabindex="-1"><a class="header-anchor" href="#仿博客项目开发"><span>仿博客项目开发</span></a></h1><h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建"><span>环境搭建</span></a></h2><h3 id="www-js中配置服务" tabindex="-1"><a class="header-anchor" href="#www-js中配置服务"><span>www.js中配置服务</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token constant">PORT</span> <span class="token operator">=</span> <span class="token number">8000</span></span>
<span class="line"><span class="token keyword">const</span> serverHandle <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../app&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span>serverHandle<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token constant">PORT</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="app-js中配置请求" tabindex="-1"><a class="header-anchor" href="#app-js中配置请求"><span>app.js中配置请求</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">serverHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 设置返回格式</span></span>
<span class="line">  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">const</span> resData <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;xxx&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">site</span><span class="token operator">:</span> <span class="token string">&#39;www.xxx.com&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">env</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>resData<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> serverHandle</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装cross-env" tabindex="-1"><a class="header-anchor" href="#安装cross-env"><span>安装cross-env</span></a></h3><blockquote><p>npm install cross-env --save-dev</p></blockquote><p>环境变量，通用于Mac、Windows、Linux</p><h3 id="安装nodemon" tabindex="-1"><a class="header-anchor" href="#安装nodemon"><span>安装nodemon</span></a></h3><blockquote><p>npm install nodemon --save-dev</p></blockquote><p>使用 nodemon启动服务，监听文件变化，热更新</p><h2 id="架构设计" tabindex="-1"><a class="header-anchor" href="#架构设计"><span>架构设计</span></a></h2><h3 id="第一层启动服务相关" tabindex="-1"><a class="header-anchor" href="#第一层启动服务相关"><span>第一层启动服务相关</span></a></h3><p>在 www.js 中进行配置</p><h3 id="第二层整体项目相关" tabindex="-1"><a class="header-anchor" href="#第二层整体项目相关"><span>第二层整体项目相关</span></a></h3><p>在 app.js 中进行配置</p><h3 id="第三层路由配置相关" tabindex="-1"><a class="header-anchor" href="#第三层路由配置相关"><span>第三层路由配置相关</span></a></h3><p>新建 router 文件，只做路由的处理，不关心数据</p><h3 id="第四层数据相关" tabindex="-1"><a class="header-anchor" href="#第四层数据相关"><span>第四层数据相关</span></a></h3><p>新建 controller 文件，只关注数据处理</p><h2 id="路由" tabindex="-1"><a class="header-anchor" href="#路由"><span>路由</span></a></h2><h3 id="app-js中获取url和path" tabindex="-1"><a class="header-anchor" href="#app-js中获取url和path"><span>app.js中获取url和path</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 获取 path</span></span>
<span class="line"><span class="token keyword">const</span> url <span class="token operator">=</span> req<span class="token punctuation">.</span>url</span>
<span class="line">req<span class="token punctuation">.</span>path <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="路由匹配不到时的错误处理" tabindex="-1"><a class="header-anchor" href="#路由匹配不到时的错误处理"><span>路由匹配不到时的错误处理</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 未命中路由，返回 404</span></span>
<span class="line">res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;Content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;404 Not Found\\n&quot;</span><span class="token punctuation">)</span></span>
<span class="line">res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="model" tabindex="-1"><a class="header-anchor" href="#model"><span>Model</span></a></h2><p>处理返回数据</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">class</span> <span class="token class-name">resModel</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">           <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> data</span>
<span class="line">           data <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line">           message <span class="token operator">=</span> <span class="token keyword">null</span>                    </span>
<span class="line">        <span class="token punctuation">}</span>  </span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>data <span class="token operator">=</span> data        </span>
<span class="line">        <span class="token punctuation">}</span>    </span>
<span class="line">        </span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>message<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>message <span class="token operator">=</span> message        </span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">SuccessModel</span> <span class="token keyword">extends</span> <span class="token class-name">BaseModel</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> message<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>errno <span class="token operator">=</span> <span class="token number">0</span>    </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">ErrorModel</span> <span class="token keyword">extends</span> <span class="token class-name">BaseModel</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">data<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> message<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>errno <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>    </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    SuccessModel<span class="token punctuation">,</span></span>
<span class="line">    ErrorModel</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="处理-post-data" tabindex="-1"><a class="header-anchor" href="#处理-post-data"><span>处理 post data</span></a></h2><p>在 app.js 中</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">getPostData</span> <span class="token operator">=</span> <span class="token parameter">req</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>method <span class="token operator">!==</span> <span class="token string">&#39;POST&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">return</span>        </span>
<span class="line">        <span class="token punctuation">}</span>         </span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">return</span>                    </span>
<span class="line">        <span class="token punctuation">}</span>       </span>
<span class="line">        <span class="token keyword">let</span> postData <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">        req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token parameter">chunk</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            postData <span class="token operator">+=</span> chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        </span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        req<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;end&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>postData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">return</span>            </span>
<span class="line">            <span class="token punctuation">}</span>        </span>
<span class="line">            <span class="token function">resolve</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>postData<span class="token punctuation">)</span>            </span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span> promise</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">serverHandle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 设置返回格式</span></span>
<span class="line">  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Content-type&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;application/json&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 获取 path</span></span>
<span class="line">  <span class="token keyword">const</span> url <span class="token operator">=</span> req<span class="token punctuation">.</span>url</span>
<span class="line">  req<span class="token punctuation">.</span>path <span class="token operator">=</span> url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 解析 query</span></span>
<span class="line">  req<span class="token punctuation">.</span>query <span class="token operator">=</span> querystring<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>url<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 处理 post data</span></span>
<span class="line">  <span class="token function">getPostData</span><span class="token punctuation">(</span>req<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">postData</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 将 post data 数据保存在req.body 中，后续直接使用</span></span>
<span class="line">    req<span class="token punctuation">.</span>body <span class="token operator">=</span> postData<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 处理blog 路由</span></span>
<span class="line">    <span class="token keyword">const</span> blogData <span class="token operator">=</span> <span class="token function">handleBlogRouter</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>blogData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>blogData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 处理 user 路由</span></span>
<span class="line">    <span class="token keyword">const</span> userData <span class="token operator">=</span> <span class="token function">handleUserRouter</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>userData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>userData<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token keyword">return</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 未命中路由，返回 404</span></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token string-property property">&quot;Content-type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;text/plain&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;404 Not Found\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mysql" tabindex="-1"><a class="header-anchor" href="#mysql"><span>Mysql</span></a></h2><ul><li><p>web server 中最流行的关系型数据库，轻量级，易学易用</p></li><li><p>web server 中最流行的关系型数据库，轻量级，易学易用</p></li><li><p>下载地址：[https://dev.mysql.com/downloads/mysql/]https://dev.mysql.com/downloads/mysql/</p></li><li><p>可视化操作客户端：workbench</p></li><li><p>下载地址：[https://dev.mysql.com/downloads/workbench/]https://dev.mysql.com/downloads/workbench/</p></li></ul><h3 id="数据库操作" tabindex="-1"><a class="header-anchor" href="#数据库操作"><span>数据库操作</span></a></h3><p>1.建库</p><blockquote><p>CREATE SCHEMA <code>myblog</code></p></blockquote><p>2.建表</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>myblog<span class="token punctuation">\`</span></span><span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>users<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span></span>
<span class="line">  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">INT</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token identifier"><span class="token punctuation">\`</span>username<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token identifier"><span class="token punctuation">\`</span>realname<span class="token punctuation">\`</span></span> <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.操作表</p><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre><code><span class="line"><span class="token keyword">use</span> myblog<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- show tables;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 增加一条数据</span></span>
<span class="line"><span class="token keyword">insert</span> <span class="token keyword">into</span> users <span class="token punctuation">(</span>username<span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> realname<span class="token punctuation">)</span> <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">&#39;lisi&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查询表中所有内容</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 指定条件查询 users 表</span></span>
<span class="line"><span class="token keyword">select</span> id<span class="token punctuation">,</span> username <span class="token keyword">from</span> users<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 查询 users 表中 username 是 zhangsan 并且 password 是 123 的数据（ password 是关键字，用\`\`表示表中的列名）</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> username<span class="token operator">=</span><span class="token string">&#39;zhangsan&#39;</span> <span class="token operator">and</span> <span class="token identifier"><span class="token punctuation">\`</span>password<span class="token punctuation">\`</span></span><span class="token operator">=</span><span class="token string">&#39;123&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 模糊查询</span></span>
<span class="line"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> username <span class="token operator">like</span> <span class="token string">&#39;%zhang%&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 排序 desc（逆序）</span></span>
<span class="line"><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span> users <span class="token keyword">where</span> password <span class="token operator">like</span> <span class="token string">&#39;%1%&#39;</span> <span class="token keyword">order</span> <span class="token keyword">by</span> id <span class="token keyword">desc</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 更新</span></span>
<span class="line"><span class="token keyword">update</span> users <span class="token keyword">set</span> realname<span class="token operator">=</span><span class="token string">&#39;李四2&#39;</span> <span class="token keyword">where</span> username<span class="token operator">=</span><span class="token string">&#39;lisi&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 删除</span></span>
<span class="line"><span class="token keyword">delete</span> <span class="token keyword">from</span> users <span class="token keyword">where</span> username<span class="token operator">=</span><span class="token string">&#39;lisi&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- 软删除</span></span>
<span class="line"><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span> users <span class="token keyword">where</span> state<span class="token operator">=</span><span class="token string">&#39;1&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">-- 查询 state 不为 0</span></span>
<span class="line"><span class="token keyword">select</span><span class="token operator">*</span><span class="token keyword">from</span> users <span class="token keyword">where</span> state <span class="token operator">&lt;&gt;</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token keyword">update</span> users <span class="token keyword">set</span> state<span class="token operator">=</span><span class="token string">&#39;0&#39;</span> <span class="token keyword">where</span> username<span class="token operator">=</span><span class="token string">&#39;lisi&#39;</span><span class="token punctuation">;</span> <span class="token comment">-- 软删除</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- insert into blogs (title, content, createtime, author) values (&#39;标题A&#39;, &#39;内容A&#39;, 1679663796796, &#39;zhangsan&#39;);</span></span>
<span class="line"><span class="token comment">-- insert into blogs (title, content, createtime, author) values (&#39;标题B&#39;, &#39;内容B&#39;, 1679663870058, &#39;lisi&#39;);</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">-- select*from blogs order by createtime desc;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 查询 mysql 版本号</span></span>
<span class="line"><span class="token keyword">select</span> version<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 联表查询</span></span>
<span class="line"><span class="token keyword">select</span> blogs<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token punctuation">,</span> users<span class="token punctuation">.</span>username<span class="token punctuation">,</span> users<span class="token punctuation">.</span>nickname</span>
<span class="line"><span class="token keyword">from</span> blogs <span class="token keyword">inner</span> <span class="token keyword">join</span> users <span class="token keyword">on</span> users<span class="token punctuation">.</span>id <span class="token operator">=</span> blogs<span class="token punctuation">.</span>userid</span>
<span class="line"><span class="token keyword">where</span> users<span class="token punctuation">.</span>username <span class="token operator">=</span> <span class="token string">&#39;zhangsan&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="node-连接-mysql" tabindex="-1"><a class="header-anchor" href="#node-连接-mysql"><span>node 连接 mysql</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> mysql <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mysql&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 创建连接对象</span></span>
<span class="line"><span class="token keyword">const</span> con <span class="token operator">=</span> mysql<span class="token punctuation">.</span><span class="token function">createConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">user</span><span class="token operator">:</span> <span class="token string">&#39;root&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">password</span><span class="token operator">:</span> <span class="token string">&#39;rr3262678&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token string">&#39;3306&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">database</span><span class="token operator">:</span> <span class="token string">&#39;myblog&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 开始连接</span></span>
<span class="line">con<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 执行 sql 语句</span></span>
<span class="line"><span class="token keyword">const</span> sql <span class="token operator">=</span> <span class="token string">&#39;select * from users;&#39;</span></span>
<span class="line">con<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 关闭</span></span>
<span class="line">con<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 连接问题</span></span>
<span class="line">  <span class="token literal-property property">errno</span><span class="token operator">:</span> <span class="token number">1251</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">sqlMessage</span><span class="token operator">:</span> <span class="token string">&#39;Client does not support authentication protocol requested by server; consider upgrading MySQL client&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">sqlState</span><span class="token operator">:</span> <span class="token string">&#39;08004&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">fatal</span><span class="token operator">:</span> <span class="token boolean">true</span></span>
<span class="line"><span class="token comment">// 解决方案</span></span>
<span class="line">mysql<span class="token operator">&gt;</span> alter user <span class="token string">&#39;root&#39;</span>@<span class="token string">&#39;localhost&#39;</span> identified <span class="token keyword">with</span> mysql_native_password by <span class="token string">&#39;自己的密码&#39;</span><span class="token punctuation">;</span></span>
<span class="line">mysql<span class="token operator">&gt;</span> flush privileges<span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="需要注意的点" tabindex="-1"><a class="header-anchor" href="#需要注意的点"><span>需要注意的点</span></a></h3><p>sql 条件中 1=1 的作用</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">getList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">author<span class="token punctuation">,</span> keyword</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 1=1 起一个占位符的作用，避免后面不确定条件字段的拼接错误</span></span>
<span class="line">  <span class="token keyword">let</span> sql <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">select * from blogs where 1=1</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>author<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    sql <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">and author=&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>author<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>keyword<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    sql <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">and title like &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>keyword<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  sql <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">order by createtime desc;</span><span class="token template-punctuation string">\`</span></span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 返回 promise</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token function">exec</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="登录" tabindex="-1"><a class="header-anchor" href="#登录"><span>登录</span></a></h2><h3 id="cookie" tabindex="-1"><a class="header-anchor" href="#cookie"><span>cookie</span></a></h3><p>什么是cookie：</p><ul><li>存储在浏览器的一段字符串（最大5kb）</li><li>跨域不共享</li><li>格式如k1=v1, k2=v2；因此可以存储结构化数据</li><li>每次发送http请求，会将请求域的cookie一起发送给server</li><li>server可以修改cookie并返回给浏览器</li><li>浏览器中也可以通过javascript修改cookie（有限制）</li></ul><p>httpOnly：不允许浏览器端修改</p><p>path：生效路径</p><p>expires: 过期时间</p><h3 id="session" tabindex="-1"><a class="header-anchor" href="#session"><span>session</span></a></h3><p>使用 cookie 存在的问题:</p><ul><li>会暴露敏感信息</li><li>存储有限，大小只有5kb</li></ul><p>session 的解决方案：</p><ul><li>生成 userid，userid 对应相应的用户信息</li></ul><h3 id="redis" tabindex="-1"><a class="header-anchor" href="#redis"><span>redis</span></a></h3><p>问题</p><ul><li>session如果是js变量，放在nodejs进程内存中，如果访问量过大，内存暴增容易引起栈溢出</li><li>线上环境是多进程的，进程之间内存无法共享</li><li>redis 是web server 最常用的缓存数据库，数据存放在内存中，相比于 mysql ，访问速度快，但是成本更高</li></ul><p>为什么session适用于 redis</p><ul><li>session 访问频繁，对性能要求极高</li><li>session可以不考虑断电丢失数据的问题</li><li>session数据量不会很大</li></ul><p>安装 redis</p><blockquote><p>Windows：[http://www.runoob.com/redis/redis-install.html]http://www.runoob.com/redis/redis-install.html</p></blockquote><blockquote><p>Mac：使用 brew install redis</p></blockquote><p>启动服务：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">redis<span class="token operator">-</span>server</span>
<span class="line">redis<span class="token operator">-</span>cli</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,68)]))}const i=n(t,[["render",l],["__file","boke.html.vue"]]),u=JSON.parse('{"path":"/zh/node/node/boke.html","title":"仿博客项目开发","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"环境搭建","slug":"环境搭建","link":"#环境搭建","children":[{"level":3,"title":"www.js中配置服务","slug":"www-js中配置服务","link":"#www-js中配置服务","children":[]},{"level":3,"title":"app.js中配置请求","slug":"app-js中配置请求","link":"#app-js中配置请求","children":[]},{"level":3,"title":"安装cross-env","slug":"安装cross-env","link":"#安装cross-env","children":[]},{"level":3,"title":"安装nodemon","slug":"安装nodemon","link":"#安装nodemon","children":[]}]},{"level":2,"title":"架构设计","slug":"架构设计","link":"#架构设计","children":[{"level":3,"title":"第一层启动服务相关","slug":"第一层启动服务相关","link":"#第一层启动服务相关","children":[]},{"level":3,"title":"第二层整体项目相关","slug":"第二层整体项目相关","link":"#第二层整体项目相关","children":[]},{"level":3,"title":"第三层路由配置相关","slug":"第三层路由配置相关","link":"#第三层路由配置相关","children":[]},{"level":3,"title":"第四层数据相关","slug":"第四层数据相关","link":"#第四层数据相关","children":[]}]},{"level":2,"title":"路由","slug":"路由","link":"#路由","children":[{"level":3,"title":"app.js中获取url和path","slug":"app-js中获取url和path","link":"#app-js中获取url和path","children":[]},{"level":3,"title":"路由匹配不到时的错误处理","slug":"路由匹配不到时的错误处理","link":"#路由匹配不到时的错误处理","children":[]}]},{"level":2,"title":"Model","slug":"model","link":"#model","children":[]},{"level":2,"title":"处理 post data","slug":"处理-post-data","link":"#处理-post-data","children":[]},{"level":2,"title":"Mysql","slug":"mysql","link":"#mysql","children":[{"level":3,"title":"数据库操作","slug":"数据库操作","link":"#数据库操作","children":[]},{"level":3,"title":"node 连接 mysql","slug":"node-连接-mysql","link":"#node-连接-mysql","children":[]},{"level":3,"title":"需要注意的点","slug":"需要注意的点","link":"#需要注意的点","children":[]}]},{"level":2,"title":"登录","slug":"登录","link":"#登录","children":[{"level":3,"title":"cookie","slug":"cookie","link":"#cookie","children":[]},{"level":3,"title":"session","slug":"session","link":"#session","children":[]},{"level":3,"title":"redis","slug":"redis","link":"#redis","children":[]}]}],"git":{"updatedTime":1736852909000,"contributors":[{"name":"zhan_zhang","username":"zhan_zhang","email":"18311292602@163.com","commits":1,"url":"https://github.com/zhan_zhang"}]},"filePathRelative":"zh/node/node/boke.md"}');export{i as comp,u as data};
