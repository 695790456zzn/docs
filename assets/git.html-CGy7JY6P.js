import{_ as s,c as e,d as n,o as i}from"./app-ClEyjm_t.js";const t={};function r(l,a){return i(),e("div",null,a[0]||(a[0]=[n(`<h1 id="git" tabindex="-1"><a class="header-anchor" href="#git"><span>Git</span></a></h1><p><a href="https://www.runoob.com/note/56524" target="_blank" rel="noopener noreferrer">Git常用命令</a></p><h2 id="git-config" tabindex="-1"><a class="header-anchor" href="#git-config"><span>git config</span></a></h2><p>我们可以通过git config来配置用户名和邮箱地址，便于我们将代码提交到远程仓库，具体格式如下</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>name <span class="token string">&#39;你的用户名&#39;</span></span>
<span class="line">git config <span class="token operator">--</span>global user<span class="token punctuation">.</span>email <span class="token string">&#39;你的邮箱&#39;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-add" tabindex="-1"><a class="header-anchor" href="#git-add"><span>git add</span></a></h2><p>git add 命令可将文件添加到缓存</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">git add <span class="token punctuation">.</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>当然我们也可以指定某一类文件，如将java文件添加到缓存中</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">it add <span class="token operator">*</span><span class="token punctuation">.</span>java</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="git-status" tabindex="-1"><a class="header-anchor" href="#git-status"><span>git status</span></a></h2><p>我们可以使用 git status 命令来查看相关文件的状态</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">git status</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="git-diff" tabindex="-1"><a class="header-anchor" href="#git-diff"><span>git diff</span></a></h2><p>执行 git diff 来查看更新的详细信息，与git status不同的是，git status只显示更新的状态，而 git diff 可以显示已写入缓存与已修改但尚未写入缓存的改动的区别具体的详细信息。</p><ul><li>尚未缓存的改动：git diff</li><li>查看已缓存的改动： git diff --cached</li><li>查看已缓存的与未缓存的所有改动：git diff HEAD</li><li>显示摘要而非整个 diff：git diff --stat</li></ul><h2 id="git-commit" tabindex="-1"><a class="header-anchor" href="#git-commit"><span>git commit</span></a></h2><p>git commit 将缓存区内容添加到仓库中，可以在后面加-m选项，以在命令行中提供提交注释</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">git commit <span class="token operator">-</span>m <span class="token string">&quot;第一次版本提交&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>如果你觉得 每次 commit之前要add一下，想跳过add这一步，可以直接使用 -a选项</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">git commit <span class="token operator">-</span>am <span class="token string">&quot;第一次版本提交&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="git-reset-head" tabindex="-1"><a class="header-anchor" href="#git-reset-head"><span>git reset HEAD</span></a></h2><p>git reset HEAD 命令用于取消已缓存的内容，如我们要取消已提交的test.txt文件</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">git reset <span class="token constant">HEAD</span> test<span class="token punctuation">.</span>txt</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>执行完之后，再使用commit提交时，test.txt文件不会被提交。</p>`,25)]))}const p=s(t,[["render",r],["__file","git.html.vue"]]),c=JSON.parse('{"path":"/zh/tools/git/git.html","title":"Git","lang":"en-US","frontmatter":{},"git":{"updatedTime":1736862884000,"contributors":[{"name":"zhan_zhang","username":"","email":"18311292602@163.com","commits":1}],"changelog":[{"hash":"c7ca11ca23fe56a99c4efe38100477f097fd7a4b","time":1736862884000,"email":"18311292602@163.com","author":"zhan_zhang","message":"完成http文档"}]},"filePathRelative":"zh/tools/git/git.md"}');export{p as comp,c as data};
