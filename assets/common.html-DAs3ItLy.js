import{_ as s,c as a,d as e,o as l}from"./app-D0nt0rSp.js";const t={};function i(o,n){return l(),a("div",null,n[0]||(n[0]=[e(`<h1 id="js基础面试题" tabindex="-1"><a class="header-anchor" href="#js基础面试题"><span>JS基础面试题</span></a></h1><h2 id="var-和-let-const-的区别" tabindex="-1"><a class="header-anchor" href="#var-和-let-const-的区别"><span>var 和 let const 的区别</span></a></h2><ul><li>var 是 ES5 语法， let const 是 ES6 语法；var 有变量提升；</li><li>var 和 let 是变量，可修改；const 是常量，不可修改；</li><li>let const 有块级作用域，var 没有； tips：变量提升</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 变量提升</span></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token comment">// undefined</span></span>
<span class="line"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">200</span></span>
<span class="line"></span>
<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> <span class="token comment">// 报错</span></span>
<span class="line"><span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">20</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 函数表达式 函数声明</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="typeof-能判断哪些类型" tabindex="-1"><a class="header-anchor" href="#typeof-能判断哪些类型"><span>typeof 能判断哪些类型</span></a></h2><ul><li>识别所有值类型：undefined string number boolean symbol</li><li>判断是否是对象：object（注意，typeof null === &#39;object&#39;）</li><li>识别函数：function</li></ul><h2 id="列举强制类型转换和隐式类型转换" tabindex="-1"><a class="header-anchor" href="#列举强制类型转换和隐式类型转换"><span>列举强制类型转换和隐式类型转换</span></a></h2><ul><li>强制：parseInt parseFloat toString 等</li><li>隐式：if、逻辑运算、==、+拼接字符串</li></ul>`,8)]))}const p=s(t,[["render",i],["__file","common.html.vue"]]),r=JSON.parse('{"path":"/zh/interview/js/common.html","title":"JS基础面试题","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"var 和 let const 的区别","slug":"var-和-let-const-的区别","link":"#var-和-let-const-的区别","children":[]},{"level":2,"title":"typeof 能判断哪些类型","slug":"typeof-能判断哪些类型","link":"#typeof-能判断哪些类型","children":[]},{"level":2,"title":"列举强制类型转换和隐式类型转换","slug":"列举强制类型转换和隐式类型转换","link":"#列举强制类型转换和隐式类型转换","children":[]}],"git":{"updatedTime":1736863912000,"contributors":[{"name":"zhan_zhang","username":"zhan_zhang","email":"18311292602@163.com","commits":2,"url":"https://github.com/zhan_zhang"}]},"filePathRelative":"zh/interview/js/common.md"}');export{p as comp,r as data};
